# Environment variables for ArgoCD installation script
# Ensure to replace the placeholder values with your actual credentials and configurations.
# Save this file as .env in the same directory as your install-argocd.sh
# script.


# AWS credentials and region
## Ensure to replace these values with your actual AWS credentials and region.
## You can obtain your AWS Access Key ID and Secret Access Key from the AWS Management Console.
## The AWS Region should be the region where you want to deploy your resources.
## Example values are provided below, but you should replace them with your actual values.
## Make sure to keep your credentials secure and do not share them publicly.
## As a best practice, consider using IAM roles instead of AWS API keys for better security.
## Ensure for AWS API keys that you tightly scope the permissions to the minimum necessary
## permissions for your application, and rotate them often and regularly.
## It is recommended to set up CloudTrail and CloudWatch to monitor API calls and
## resource changes in your AWS account. This will enhance your security posture
## and help you detect any unauthorized access or changes to your resources, which is critical
## for maintaining the security of your AWS environment, and even more-so when using API keys.
AWS_ACCESS_KEY_ID=your_access_key_id    # Replace with your AWS access key ID
AWS_SECRET_ACCESS_KEY=your_secret_access_key    # Replace with your AWS secret access key
AWS_REGION=your_aws_region  # Replace with your AWS region (e.g., us-east-1, us-west-2, etc.)


# Ingress configuration
## Ensure to replace these values with your actual configurations.
## The STATIC_IP should be a valid IP address that you have reserved in your cloud provider
## or your local network.
## The DOMAIN should be a valid domain name that you own and have configured to point to the
## STATIC_IP.
## The INGRESS_CLASS should match the ingress controller you are using in your Kubernetes cluster.
## For example, if you are using NGINX Ingress Controller, you can set it to "nginx".
## If you are using a different ingress controller, set it accordingly.
## Example values are provided below, but you should replace them with your actual values.
STATIC_IP="192.168.9.204"  # Replace with your static IP address
DOMAIN="example.com"    # Replace with your domain name
ENABLE_INGRESS=true  # Set to true to enable ingress, false to disable
INGRESS_CLASS="nginx"   # Replace with your ingress class (e.g., nginx, traefik, etc.)


# ArgoCD configuratio
# https://github.com/argoproj/argo-cd/releases
## Ensure to use the correct version and checksum for your setup
## You can find the latest version and checksum from the official ArgoCD releases.
## The version and checksum below are valid for the 3.0.6 default version.
## Please verify them against the official ArgoCD releases

ARGOCD_SUBDOMAIN="argocd"   # Replace with your desired ArgoCD subdomain
ARGOCD_VERSION="v3.0.6" # Replace with the desired ArgoCD version

# The manifest URL for ArgoCD - idempotently generated based on the version
# This URL points to the YAML manifest file for installing ArgoCD in Kubernetes.
ARGOCD_MANIFEST_URL="https://raw.githubusercontent.com/argoproj/argo-cd/${ARGOCD_VERSION}/manifests/install.yaml"

# Replace with the expected checksum for the ArgoCD version you are using
ARGOCD_MANIFEST_CHECKSUM="e6683f77ee15226766b89b02a34e5f580418dfe4ec5c7407fc024b45616bc663"


# Actions Runner Controller version
## https://github.com/actions/actions-runner-controller/releases
ARC_VERSION="0.12.1"    # Replace with the desired Actions Runner Controller version


# Cert-Manager configuration
## Ensure to use the correct version and checksum for your setup
## You can find the latest version and checksum from the official Cert-Manager releases.
## The version and checksum below are valid only for the 1.18.1 default version.
## Please verify them against the official Cert-Manager releases
EMAIL="OgP6o@example.com"  # Replace with your email address for Cert-Manager notifications
CERT_MANAGER_VERSION="v1.18.1"  # Replace with the desired Cert-Manager version

# The manifest URL for Cert-Manager - idempotently generated based on the version
# This URL points to the YAML manifest file for installing Cert-Manager in Kubernetes.
CERT_MANAGER_MANIFEST_URL="https://github.com/cert-manager/cert-manager/releases/download/${CERT_MANAGER_VERSION}/cert-manager.yaml"

# Replace with the expected checksum for the Cert-Manager version you are using
CERT_MANAGER_CHECKSUM="bfa31f0130a7ae2d56b4c163a1ddadb4ff4dfd2954466727b83c92a61197b6a2"
